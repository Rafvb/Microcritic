{"ts":1377263140140,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1377264830775,"patch":[[{"diffs":[[1,"var passport = require('passport')\n  , LocalStrategy = require('passport-local').Strategy\n  , User = require('../models/user');\n\nexports.init = function initPassport(app) {  \n  app.use(passport.initialize());\n  app.use(passport.session());\n  app.use(function(req, res, next) {\n      app.locals({user: req.user});\n      next();\n  });\n\n  passport.use(new LocalStrategy(\n    function(username, password, done) {\n      User.findOne({ username: username }, function(err, user) {\n        if (err) { \n          return done(err); \n        }\n        if (!user) {\n          return done(null, false, { message: 'Incorrect username.' });\n        }\n        if (!user.comparePassword(password)) {\n          return done(null, false, { message: 'Incorrect password.' });\n        }\n        return done(null, user);\n      });\n    }\n  ));\n  \n  passport.serializeUser(function(user, done) {\n    done(null, user.id);\n  });\n  \n  passport.deserializeUser(function(id, done) {\n    User.findById(id, function (err, user) {\n      done(err, user);\n    });\n  });\n};\n\nexports.authenticate = passport.authenticate('local', { failureRedirect: '/login', failureFlash: true });\n\nexports.ensureAuthenticated = function ensureAuthenticated(req, res, next) {\n  if (req.isAuthenticated()) { \n    return next(); \n  }\n  \n  res.redirect('/login');\n};"]],"start1":0,"start2":0,"length1":0,"length2":1310}]],"length":1310,"saved":false}
